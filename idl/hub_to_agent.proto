// Copyright (c) 2017-2022 VMware, Inc. or its affiliates
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package idl;

service Agent {
  rpc CheckDiskSpace (CheckSegmentDiskSpaceRequest) returns (CheckDiskSpaceReply) {}
  rpc UpgradePrimaries (UpgradePrimariesRequest) returns (UpgradePrimariesReply) {}
  rpc RenameDirectories (RenameDirectoriesRequest) returns (RenameDirectoriesReply) {}
  rpc StopAgent (StopAgentRequest) returns (StopAgentReply) {}
  rpc DeleteDataDirectories (DeleteDataDirectoriesRequest) returns (DeleteDataDirectoriesReply) {}
  rpc DeleteStateDirectory (DeleteStateDirectoryRequest) returns (DeleteStateDirectoryReply) {}
  rpc DeleteTablespaceDirectories (DeleteTablespaceRequest) returns (DeleteTablespaceReply) {}
  rpc ArchiveLogDirectory (ArchiveLogDirectoryRequest) returns (ArchiveLogDirectoryReply) {}
  rpc RsyncDataDirectories (RsyncRequest) returns (RsyncReply) {}
  rpc RsyncTablespaceDirectories (RsyncRequest) returns (RsyncReply) {}
  rpc RestorePrimariesPgControl (RestorePgControlRequest) returns (RestorePgControlReply) {}
  rpc UpdateConfiguration (UpdateConfigurationRequest) returns (UpdateConfigurationReply) {}
  rpc RenameTablespaces (RenameTablespacesRequest) returns (RenameTablespacesReply) {}
  rpc CreateRecoveryConf (CreateRecoveryConfRequest) returns (CreateRecoveryConfReply) {}
  rpc AddReplicationEntries (AddReplicationEntriesRequest) returns (AddReplicationEntriesReply) {}
}

message PgOptions {
  enum Mode {
    unknown_mode = 0; // http://androiddevblog.com/protocol-buffers-pitfall-adding-enum-values/
    dispatcher = 1;
    segment = 2;
  }

  enum Action {
    unknown_action = 0; // http://androiddevblog.com/protocol-buffers-pitfall-adding-enum-values/
    upgrade = 1;
    check = 2;
  }

  Action action = 1;
  string Role = 2;
  int32 ContentID = 3;
  Mode mode = 4;
  string OldOptions = 5;
  bool LinkMode = 6;
  string TargetVersion = 7;
  string OldBinDir = 8;
  string OldDataDir = 9;
  string OldPort = 10;
  string OldDBID = 11;
  string NewBinDir = 12;
  string NewDataDir = 13;
  string NewPort = 14;
  string NewDBID = 15;
  map<int32, TablespaceInfo> Tablespaces = 16;
}

message TablespaceInfo {
  string Location = 1;
  bool UserDefined = 2;
}

message UpgradePrimariesRequest {
  PgOptions.Action action = 1;
  repeated PgOptions opts = 2;
}

message UpgradePrimariesReply {}

message DeleteDataDirectoriesRequest {
  repeated string datadirs = 1;
}
message DeleteDataDirectoriesReply {}

message DeleteStateDirectoryRequest {}
message DeleteStateDirectoryReply {}

message DeleteTablespaceRequest {
  repeated string dirs = 1;
}
message DeleteTablespaceReply {}

message ArchiveLogDirectoryRequest {
    string NewDir = 1;
}
message ArchiveLogDirectoryReply {}

message RenameDirectories {
  string Source = 1;
  string Target = 2;
}

message RenameDirectoriesRequest {
  repeated RenameDirectories Dirs = 1;
}

message RenameDirectoriesReply {}

message StopAgentRequest {}
message StopAgentReply {}

message CheckSegmentDiskSpaceRequest {
    double diskFreeRatio = 1;
    repeated string dirs = 2;
}

message CheckDiskSpaceReply {
    message DiskUsage {
      string fs = 1;
      string host = 2;
      uint64 available = 3;
      uint64 required = 4;
    }

    repeated DiskUsage usage = 1;
}

message RsyncRequest {
    message RsyncOptions {
      repeated string sources = 1;
      string destinationHost = 2;
      string destination = 3;
      repeated string options = 4;
      repeated string excludedFiles = 5;
    }

    repeated RsyncOptions options = 1;
}

message RsyncReply {}

message RestorePgControlRequest {
  repeated string datadirs = 1;
}

message RestorePgControlReply {}

message UpdateFileConfOptions {
  string path = 1;
  string pattern = 2;
  string replacement = 3;
}

message UpdateConfigurationRequest {
  repeated UpdateFileConfOptions options = 1;
}

message UpdateConfigurationReply {}

message RenameTablespacesRequest {
  message RenamePair {
    string source = 1;
    string destination = 2;
  }

  repeated RenamePair renamePairs = 1;
}

message RenameTablespacesReply{}

message CreateRecoveryConfRequest {
  message Connection {
    string mirrorDataDir = 2;
    string user = 1;
    string primaryHost = 3;
    int32 primaryPort = 4;
  }

  repeated Connection connections = 1;
}

message CreateRecoveryConfReply{}

message AddReplicationEntriesRequest {
  message Entry {
    string DataDir = 1;
    string User = 2;
    repeated string HostAddrs = 3;
  }

  repeated Entry entries = 1;
}

message AddReplicationEntriesReply {}
