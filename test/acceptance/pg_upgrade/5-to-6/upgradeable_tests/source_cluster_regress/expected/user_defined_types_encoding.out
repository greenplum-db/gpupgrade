-- Copyright (c) 2017-2023 VMware, Inc. or its affiliates
-- SPDX-License-Identifier: Apache-2.0

-- Test to ensure that encodings like compresstype, blocksize, and
-- compresslevel on user-defined types are preserved during an upgrade.

--------------------------------------------------------------------------------
-- Create and setup upgradeable objects
--------------------------------------------------------------------------------

CREATE TYPE psuedo_type;
CREATE
-- This should fail. Cannot set encodings of psuedo types.
ALTER TYPE public.psuedo_type SET DEFAULT ENCODING (compresstype=zlib, blocksize=8192, compresslevel=1);
ERROR:  type "public.psuedo_type" is only a shell

CREATE TYPE composite_type AS ( length double precision, width double precision, depth double precision );
CREATE
-- This should fail. Cannot set encodings of composite types.
ALTER TYPE public.composite_type SET DEFAULT ENCODING (compresstype=zlib, blocksize=8192, compresslevel=1);
ERROR:  type "public.composite_type" is not a base type
HINT:  The ENCODING clause cannot be used with row or composite types.

-- base type
CREATE TYPE int_rle_type;
CREATE

CREATE FUNCTION int_rle_type_in(cstring) RETURNS int_rle_type AS 'int4in' LANGUAGE internal IMMUTABLE STRICT;
CREATE

CREATE FUNCTION int_rle_type_out(int_rle_type) RETURNS cstring AS 'int4out' LANGUAGE internal IMMUTABLE STRICT;
CREATE

CREATE TYPE int_rle_type( input = int_rle_type_in, output = int_rle_type_out, internallength = 4, default = 55, passedbyvalue, compresstype = rle_type, blocksize = 8192, compresslevel = 1);
CREATE

CREATE TYPE char_zlib_type;
CREATE

CREATE FUNCTION char_zlib_type_in(cstring) RETURNS char_zlib_type AS 'charin' LANGUAGE internal IMMUTABLE STRICT;
CREATE

CREATE FUNCTION char_zlib_type_out(char_zlib_type) RETURNS cstring AS 'charout' LANGUAGE internal IMMUTABLE STRICT;
CREATE

CREATE TYPE char_zlib_type( input = char_zlib_type_in, output = char_zlib_type_out, internallength = 4, default = 'y', passedbyvalue, compresstype = zlib, blocksize = 16384, compresslevel = 2);
CREATE

CREATE DOMAIN us_zip_code AS TEXT CHECK ( VALUE ~ '^\d{5}$' OR VALUE ~ '^\d{5}-\d{4}$' );
CREATE
ALTER TYPE public.us_zip_code SET DEFAULT ENCODING (compresstype=zlib, blocksize=32768, compresslevel=3);
ALTER

CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy');
CREATE
ALTER TYPE public.mood SET DEFAULT ENCODING (compresstype=zlib, blocksize=65536, compresslevel=4);
ALTER
-- 5X does not set dependent array type to the same encoding when using ALTER TYPE
ALTER TYPE public._mood SET DEFAULT ENCODING (compresstype=zlib, blocksize=65536, compresslevel=4);
ALTER

CREATE TABLE aoco_custom_encoded_types(a int, b int_rle_type, c char_zlib_type, d us_zip_code, e mood) WITH (appendonly=true, orientation=column);
CREATE
INSERT INTO aoco_custom_encoded_types VALUES (0, '1', 'a', '11111', 'sad');
INSERT 1
INSERT INTO aoco_custom_encoded_types VALUES (1, '20', 'b', '22222', 'ok');
INSERT 1
INSERT INTO aoco_custom_encoded_types VALUES (2, '123', 'c', '33333-3333', 'happy');
INSERT 1

SELECT t.typname, te.typoptions FROM pg_type_encoding te LEFT JOIN pg_type t ON (t.oid=te.typid);
 typname         | typoptions                                             
-----------------+--------------------------------------------------------
 _char_zlib_type | {compresstype=zlib,blocksize=16384,compresslevel=2}    
 _int_rle_type   | {compresstype=rle_type,blocksize=8192,compresslevel=1} 
 _mood           | {compresstype=zlib,blocksize=65536,compresslevel=4}    
 char_zlib_type  | {compresstype=zlib,blocksize=16384,compresslevel=2}    
 int_rle_type    | {compresstype=rle_type,blocksize=8192,compresslevel=1} 
 mood            | {compresstype=zlib,blocksize=65536,compresslevel=4}    
 us_zip_code     | {compresstype=zlib,blocksize=32768,compresslevel=3}    
(7 rows)
