-- Copyright (c) 2017-2023 VMware, Inc. or its affiliates
-- SPDX-License-Identifier: Apache-2.0

-- Test to ensure that external partitions can be upgraded.

--------------------------------------------------------------------------------
-- Create and setup upgradeable objects
--------------------------------------------------------------------------------

-- Scenario 1: Simple partition table with one external partition
CREATE TABLE one_level_partition_table (a int, b int) DISTRIBUTED BY (a) PARTITION BY RANGE(b) (START(1) END(3) EVERY(1));
CREATE
CREATE EXTERNAL TABLE external_table (a int, b int) LOCATION ('file://@hostname@/@abs_srcdir@/data/one_level_external_table_data.csv') FORMAT 'TEXT' (DELIMITER '|');
CREATE
ALTER TABLE one_level_partition_table EXCHANGE PARTITION FOR (RANK(1)) WITH TABLE external_table WITHOUT VALIDATION;
ALTER
DROP TABLE external_table;
DROP
INSERT INTO one_level_partition_table VALUES (1,2), (3,2), (5,2);
INSERT 3
SELECT * FROM one_level_partition_table;
 a | b 
---+---
 3 | 2 
 5 | 2 
 1 | 2 
 1 | 1 
 3 | 1 
 5 | 1 
(6 rows)

-- Scenario 2: two-level partition table with one external subpartition
CREATE TABLE two_level_partition_table(a int, b int, c int) DISTRIBUTED BY (a) PARTITION BY RANGE (b) SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE (START (1) END (2) EVERY (1)) (START (1) END (3) EVERY (1));
CREATE
CREATE EXTERNAL TABLE external_table (a int, b int, c int) LOCATION ('file://@hostname@/@abs_srcdir@/data/two_level_external_table_data.csv') FORMAT 'TEXT' (DELIMITER '|');
CREATE
ALTER TABLE two_level_partition_table ALTER PARTITION FOR (RANK(1)) EXCHANGE PARTITION FOR (RANK(1)) WITH TABLE external_table WITHOUT VALIDATION;
ALTER
DROP TABLE external_table;
DROP
INSERT INTO two_level_partition_table VALUES (1,2,1), (3,2,1), (5,2,1);
INSERT 3
SELECT * FROM two_level_partition_table;
 a | b | c 
---+---+---
 3 | 2 | 1 
 5 | 2 | 1 
 1 | 1 | 1 
 3 | 1 | 1 
 5 | 1 | 1 
 1 | 2 | 1 
(6 rows)

-- Scenario 3: three-level partition table with one external subpartition
CREATE TABLE three_level_partition_table(a int, b int, c int, d char(1)) DISTRIBUTED BY (a) PARTITION BY RANGE (b) SUBPARTITION BY LIST (d) SUBPARTITION TEMPLATE (SUBPARTITION subpart_y VALUES ('y')) SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE (START (1) END (2) EVERY (1)) (START (1) END (3) EVERY (1));
CREATE
CREATE EXTERNAL TABLE external_table (a int, b int, c int, d char(1)) LOCATION ('file://@hostname@/@abs_srcdir@/data/three_level_external_table_1_data.csv') FORMAT 'TEXT' (DELIMITER '|');
CREATE
ALTER TABLE three_level_partition_table ALTER PARTITION FOR (RANK(1)) ALTER PARTITION subpart_y EXCHANGE PARTITION FOR (RANK(1)) WITH TABLE external_table WITHOUT VALIDATION;
ALTER
DROP TABLE external_table;
DROP
INSERT INTO three_level_partition_table VALUES (1,2,1,'y'), (3,2,1,'y'), (5,2,1,'y');
INSERT 3
SELECT * FROM three_level_partition_table;
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 | y 
 1 | 2 | 1 | y 
 3 | 1 | 1 | y 
 3 | 2 | 1 | y 
 5 | 1 | 1 | y 
 5 | 2 | 1 | y 
(6 rows)

-- Scenario 4: three-level partition table with two external subpartitions
CREATE TABLE other_three_level_partition_table(a int, b int, c int, d char(1)) DISTRIBUTED BY (a) PARTITION BY RANGE (b) SUBPARTITION BY LIST (d) SUBPARTITION TEMPLATE (SUBPARTITION subpart_y VALUES ('y')) SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE (START (1) END (2) EVERY (1)) (START (1) END (3) EVERY (1));
CREATE
CREATE EXTERNAL TABLE external_table_1 (a int, b int, c int, d char(1)) LOCATION ('file://@hostname@/@abs_srcdir@/data/three_level_external_table_1_data.csv') FORMAT 'TEXT' (DELIMITER '|');
CREATE
ALTER TABLE other_three_level_partition_table ALTER PARTITION FOR (RANK(1)) ALTER PARTITION subpart_y EXCHANGE PARTITION FOR (RANK(1)) WITH TABLE external_table_1 WITHOUT VALIDATION;
ALTER
DROP TABLE external_table_1;
DROP
CREATE EXTERNAL TABLE external_table_2 (a int, b int, c int, d char(1)) LOCATION ('file://@hostname@/@abs_srcdir@/data/three_level_external_table_2_data.csv') FORMAT 'TEXT' (DELIMITER '|');
CREATE
ALTER TABLE other_three_level_partition_table ALTER PARTITION FOR (RANK(2)) ALTER PARTITION subpart_y EXCHANGE PARTITION FOR (RANK(1)) WITH TABLE external_table_2 WITHOUT VALIDATION;
ALTER
DROP TABLE external_table_2;
DROP
SELECT * FROM other_three_level_partition_table;
 a | b | c | d 
---+---+---+---
 1 | 1 | 1 | y 
 1 | 2 | 1 | y 
 3 | 1 | 1 | y 
 3 | 2 | 1 | y 
 5 | 1 | 1 | y 
 5 | 2 | 1 | y 
(6 rows)
