{{range .UpgradeJobs}}
- name: {{ .Name }}
  serial_groups: [{{ .BaseName }}]
  # Specifying serial groups so that only one platform runs at a time. For
  # example, 5-to-6-centos7 will only run after 5-to-6-centos6 completes. This
  # will prevent concourse from becoming overloaded.
  plan:
    - in_parallel:
        - get: enterprise_rpm
          trigger: true
          passed: [ build ]
        - get: gpupgrade_src
          passed: [ build ]
        - get: rpm_gpdb_source
          resource: gpdb{{.Source}}_centos{{.CentosVersion}}_rpm
          trigger: true
        {{- if ne .Source .Target }}
        - get: rpm_gpdb_target
          resource: gpdb{{.Target}}_centos{{.CentosVersion}}_rpm
          trigger: true
        {{- end }}
        - get: ccp_src
        - get: terraform.d
          params:
            unpack: true
        {{- if .RetailDemo }}
        - get: retail_demo_src
        {{- else }}
        # FIXME: this is not guaranteed to be the same dump generated by the
        # above binary...
        - get: sqldump
          {{- if .ExtensionsJob }}
          resource: postgis_2.1.5_dump
          {{- else if eq (majorVersion .Source) "5" }}
          resource: icw_planner_gpdb5_centos6_dump
          {{- else }}
          resource: icw_gporca_gpdb6_centos6_dump
          {{- end }}
        {{- end }}
        {{- if .ExtensionsJob }}
        - get: gptext_targz # NOTE: The same gptext artifact is used for both the source and target clusters.
          resource: gptext_3.x_gpdb6_rhel{{.CentosVersion}}_targz
        - get: postgis_gppkg_source
          resource: postgis_2.x_gpdb{{.Source}}_centos{{.CentosVersion}}_gppkg
        - get: postgis_gppkg_target
          resource: postgis_2.x_gpdb{{.Target}}_centos{{.CentosVersion}}_gppkg
        - get: madlib_gppkg_source
          resource: madlib_1.x_gpdb{{.Source}}_centos{{.CentosVersion}}_gppkg
        - get: madlib_gppkg_target
          resource: madlib_1.x_gpdb{{.Target}}_centos{{.CentosVersion}}_gppkg
        - get: plr_gppkg_source
          resource: plr_gpdb{{.Source}}_rhel{{.CentosVersion}}_gppkg
        - get: plr_gppkg_target
          resource: plr_gpdb{{.Target}}_rhel{{.CentosVersion}}_gppkg
        {{- if ne .CentosVersion "6" }}
        - get: pxf_rpm_source
          resource: pxf_6_gpdb{{.Source}}_centos{{.CentosVersion}}_rpm
        - get: pxf_rpm_target
          resource: pxf_6_gpdb{{.Target}}_centos{{.CentosVersion}}_rpm
        - get: plcontainer_gppkg_source
          resource: plcontainer_1.x_gpdb5_rhel{{.CentosVersion}}_gppkg
        - get: plcontainer_gppkg_target
          resource: plcontainer_2.x_gpdb6_rhel{{.CentosVersion}}_gppkg
        {{- end }}
        {{- end }}
    - put: terraform
      params:
        <<: *ccp_default_params
        vars:
          {{- if .PrimariesOnly}}
          mirrors: false
          {{- else if not .NoStandby}}
          standby_master: true
          {{- end}}
          instance_type: n1-standard-2
          number_of_nodes: 4
          PLATFORM: centos{{.CentosVersion}}
          # Decrease the reap time from the default of 8 hours now that there are
          # both centos6 and centos7 jobs in order to not overload concourse.
          ccp_reap_minutes: 180
    - task: gen_source_cluster
      file: ccp_src/ci/tasks/gen_cluster.yml
      params:
        <<: *ccp_gen_cluster_default_params
        PLATFORM: centos{{.CentosVersion}}
        GPDB_RPM: true
      input_mapping:
        gpdb_rpm: rpm_gpdb_source
    - task: gpinitsystem_source_cluster
      file: ccp_src/ci/tasks/gpinitsystem.yml
    - task: prepare_installation
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: registry.access.redhat.com/ubi8/ubi
            tag: latest
        inputs:
          - name: gpupgrade_src
          - name: cluster_env_files
          - name: enterprise_rpm
          {{- if ne .Source .Target }}
          - name: rpm_gpdb_target
          {{- end }}
        run:
          path: gpupgrade_src/ci/scripts/prepare-installation.bash
          args:
            - greenplum-db-{{majorVersion .Source}}
            - greenplum-db-{{majorVersion .Target}}
    {{- if .RetailDemo }}
    - task: load_retail_data
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test
            tag: latest
        inputs:
          - name: gpupgrade_src
          - name: retail_demo_src
          - name: ccp_src
          - name: cluster_env_files
        run:
          path: gpupgrade_src/ci/scripts/load-retail-data.bash
    {{- else if .ExtensionsJob }}
    - task: load_extensions
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
            tag: latest
        params:
          GOOGLE_CREDENTIALS: ((cm-gcs-service-account-key))
          OS_VERSION: centos{{.CentosVersion}}
        inputs:
          - name: ccp_src
          - name: cluster_env_files
          - name: gpupgrade_src
          - name: gptext_targz
          - name: postgis_gppkg_source
          - name: madlib_gppkg_source
          - name: plr_gppkg_source
          - name: sqldump
          {{- if ne .CentosVersion "6" }}
          - name: pxf_rpm_source
          - name: plcontainer_gppkg_source
          {{- end }}
        run:
          path: gpupgrade_src/ci/scripts/load-extensions.bash
    {{- else }}
    - task: load_dump
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
            tag: latest
        inputs:
          - name: ccp_src
          - name: cluster_env_files
          - name: gpupgrade_src
          - name: sqldump
        run:
          path: gpupgrade_src/ci/scripts/load-dump.bash
    {{- end }}
    {{- if .ExtensionsJob }}
    - task: upgrade_extensions
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
            tag: latest
        params:
          OS_VERSION: centos{{.CentosVersion}}
        inputs:
          - name: ccp_src
          - name: cluster_env_files
          - name: gpupgrade_src
          - name: postgis_gppkg_target
          - name: madlib_gppkg_target
          - name: plr_gppkg_target
          {{- if ne .CentosVersion "6" }}
          - name: pxf_rpm_target
          - name: plcontainer_gppkg_target
          {{- end }}
        run:
          path: gpupgrade_src/ci/scripts/upgrade-extensions.bash
      params:
        MODE: "link"
        FILTER_DIFF: 1
        DIFF_FILE: extensions.diff
    {{- else }}
    - task: upgrade_cluster
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
            tag: latest
        inputs:
          - name: ccp_src
          - name: cluster_env_files
          - name: gpupgrade_src
        run:
          path: gpupgrade_src/ci/scripts/upgrade-cluster.bash
      params:
        {{- if ne .Source .Target }}
        FILTER_DIFF: 1
        {{- end }}
        {{- if .LinkMode}}
        MODE: "link"
        {{- end}}
        {{- if .RetailDemo}}
        DIFF_FILE: retail_demo.diff
        {{- end }}
    {{- end }}
    {{- if not .NoStandby -}}
    {{- if not .PrimariesOnly }}
    - task: validate_mirrors_and_standby
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: gcr.io/data-gpdb-public-images/gpdb6-centos7-test-golang
            tag: latest
        inputs:
          - name: gpupgrade_src
          - name: ccp_src
          - name: cluster_env_files
        run:
          path: bash
          args:
            - -c
            - |
              set -eux -o pipefail

              ./ccp_src/scripts/setup_ssh_to_cluster.sh

              # Load the finalize test library.
              source gpupgrade_src/test/acceptance/helpers/finalize_checks.bash

              echo 'Doing failover tests of mirrors and standby...'
              validate_mirrors_and_standby /usr/local/greenplum-db-target mdw 5432
    {{- end -}}
    {{- end }}
  ensure:
    <<: *set_failed
  on_success:
    <<: *ccp_destroy
  on_failure:
    <<: *slack_alert
{{end -}}
